GRAMATICA ASIGNADA EN NOTACIÓN ECMASCRIPT:

FunctionDeclaration ::= "function" Identifier "(" [ParameterList] ")" "{" FunctionBody "}"
ParameterList ::= Identifier {"," Identifier }
FunctionBody ::= {Statement}
Statement ::= ExpressionStatement | ConsoleStatement
ExpressionStatement ::= Expression ";"
ConsoleStatement ::= "console" "." "log" "(" Expression ")" ";"
Expression ::= Term {("+" | "-") Term}
Term ::= Identifier | Number | "(" Expression ")"
Identifier ::= letter {letter | digit | "_"}
Number ::= digit {digit}
letter ::= "a"|...|"z"|"A"|...|"Z"
digit ::= "0"|...|"9"

CONSIGNA:
Utilizando ANTLR4 con JavaScript, implemente un analizador que procese un archivo de entrada (input.txt) con código fuente escrito en este sub-lenguaje de JavaScript.

El analizador deberá realizar las siguientes tareas:
1) Análisis léxico y sintáctico sobre el codigo fuente e informar si la entrada es correcta o si contiene errores. En caso de contener errores, indicar linea en que ocurren y causa del problema.

2) Tabla de lexemas-tokens: Generar una tabla que contenga los lexemas y sus respectivos tokens reconocidos durante el análisis léxico.

3) Construir y mostrar el árbol de análisis sintáctico concreto de la entrada. Puede representarse en formato de texto.

4) Interpretación: Mostrar en la salida el código fuente (input.txt) en lenguaje JavaScript y ejecutarlo como lo haría un intérprete básico.